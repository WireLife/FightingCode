#include<iostream>
#include<queue>
using namespace std;
int map[15][15];
int nx[5] = {0,0,1,-1};
int ny[5] = {1,-1,0,0};
queue <int> x;
queue <int> y;
void bfs(int a,int b)
{
    x.push(a);
    y.push(b);
    while(x.empty() == 0)
    {
        for(int i = 0; i < 4; i++)
        {
            if(x.front() + nx[i] <=11&&x.front() + nx[i] >= 0&&y.front() + ny[i] <= 11&&y.front() + ny[i] >= 0&&map[x.front() + nx[i]][y.front() + ny[i]] == 0)
            {
                x.push(x.front() + nx[i]);
                y.push(y.front() + ny[i]);
                map[x.front() + nx[i]][y.front() + ny[i]] = 1;
            }
        }
        x.pop();
        y.pop();
    }
}
int main()
{

    int num,i,j;
    for(i = 1; i <= 10; i++)
    {
        for(j = 1; j <= 10; j++)
            scanf("%d",&map[i][j]);
    }
    bfs(0,0);
    for(i = 0; i <= 11; i++)
    {
        for(j = 0; j <= 11; j++)
        {
            if(map[i][j] == 0)
                num++;
        }
    }
    cout<<num<<endl;
    return 0;
}
